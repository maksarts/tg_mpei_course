https://leetcode.com/problems/maximum-depth-of-n-ary-tree/

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    int Depth(Node* root, int count){
        if(!root){
            return count;
        }
        if(root->children.size() == 0){
            return count + 1;
        }
        int cnt = count;
        for(const auto& child: root->children){
            int c =  Depth(child, 1);
            if(cnt+c > count){
                count = cnt + c;
            }
        }
        return count; 
    }
    
    
    int maxDepth(Node* root) {
        if(!root){
            return 0;
        }
        if(root->children.size() == 0){
            return 1;
        }
        return Depth(root, 0);
    }
};
